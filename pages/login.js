
import Head from "next/head";
import { useContext } from "react";
import { useRouter } from "next/router";
import { getAuth, signInWithEmailAndPassword } from "firebase/auth";
import { getErrorMessage, FirebaseContext } from "../components/firebase";
import clsx from "clsx";
import FormTemplate from "../components/FormTemplate";
import * as Yup from "yup";

const LoginSchema = Yup.object().shape({
	email: Yup.string()
		.email("Email is in the wrong format!")
		.required("Email is required!"),
	password: Yup.string().required("Password is required!"),
});

const Login = () => {
	const auth = getAuth();
	const router = useRouter();
	const { db } = useContext(FirebaseContext);

	async function login(values) {
		return await new Promise((res, rej) => {
			signInWithEmailAndPassword(
				auth,
				values["email"],
				values["password"]
			)
				.then((cred) => {
					// router.push("/problems");
					res(null);
				})
				.catch((error) => {
					rej(getErrorMessage(error.code));
				});
		});
	}

	return (
		<>
			<Head>
				<title>Login</title>
				<meta
					name="description"
					content="Generated by create next app"
				/>
				<link rel="icon" href="/favicon.ico" />
			</Head>
			<FormTemplate
				title="Login"
				formik={{
					initialValues: {
						email: "",
						password: "",
					},
					validationSchema: LoginSchema,
					onSubmit: login,
				}}
				fields={[
					{
						title: "Email",
						id: "email",
						type: "email",
					},
					{
						title: "Password",
						id: "password",
						type: "password",
					},
				]}
				callback={{ success: () => {} }}
			/>
		</>
	);
};

export default Login;
